PROGRAM = icodec

BYTE_ENABLED = true
NATIVE_ENABLED = false

EXE = $(if $(BYTE_ENABLED), $(PROGRAM).run) \
          $(if $(NATIVE_ENABLED), $(PROGRAM).opt)

OCAMLCFLAGS += -g -thread

MENHIR_ENABLED = true
#MENHIR_FLAGS += --infer --trace -v --graph
MENHIR_FLAGS += --infer -v --graph 

USE_OCAMLFIND = true
OCAMLFINDFLAGS = 

OCAMLPACKS[] = core

FILES = parser lexer ast typechecker main

OCamlGeneratedFiles(lexer.ml parser.ml parser.mli)

# Compile into an executable
OCamlProgram($(PROGRAM), $(FILES))

.PHONY: clean distclean run

# Default target: compile into bytecode or native code, or both
.DEFAULT: $(EXE)

run: $(EXE)
	./$(EXE) ../samples/transform1.i

clean:
  rm -f \
	lexer.ml \
	parser.ml parser.mli parser.dot parser.automaton parser.conflicts \
	 *.omc \
     $(filter-proper-targets $(glob $(addsuffix .*, $(FILES)))) \
     $(PROGRAM).run $(PROGRAM).opt


